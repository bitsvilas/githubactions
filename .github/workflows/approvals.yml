# This is a basic workflow to help you get started with Actions
name: CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
#    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get code
        uses: actions/checkout@v3
        #this can be uses or run.
        #uses can be an action. run can be a script.

#Code download end
#Install java and maven
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
#Install java and maven done
#Build           
      - name: Build with Maven
        run: mvn -B package --file pom.xml
#Build done
#Running unit test
      - name: Run unit test
        run: mvn test       
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: target 
          path: target           
#We can define and run multiple jobs as follows - 
#CD 
  cd:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    #This would trigger an approval
    #Create an env. following https://cloudlumberjack.com/posts/github-actions-approvals/    
#Step 3
    environment: 'Development'
    
    #needs helps to define them sequentially
#Step 2
    needs: ci 
    #needs: [checkout, build, lint, image]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Deploy
        run: echo "Deploy code"
       